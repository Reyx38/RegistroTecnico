@page "/index/Modificar/{tecnicoID:int}"
@rendermode InteractiveServer
@inject TecnicosServices TS
@inject NavigationManager navigation
<link rel="stylesheet" href="modificar.css" />

<PageTitle>Modificar técnicos</PageTitle>

<h3>Modificar técnicos</h3>
<EditForm Model="@Tecnico" OnValidSubmit="Guardar">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="Contenedor-Modificar">
		<h2>Modificar</h2>

		<div>
			<label>Técnico Id: @Tecnico.TecnicoId</label>
		</div>

		<div class="Inputs-text">
			<label>Nombre:</label>
			<input type="text" @bind-value="@Tecnico.Nombres" />
			<ValidationMessage For="@(() => Tecnico.Nombres)" />
		</div>

		<div class="Inputs-text">
			<label>Sueldo por hora:</label>
			<input type="text" @bind-value="@Tecnico.SueldoHora" />
			<ValidationMessage For="@(() => Tecnico.SueldoHora)" />

		</div>

		<div class="botones">
			<button type="submit" @onclick="Volver" class="bi bi-arrow-left-square"> Volver</button>
			<button type="submit" @onclick="Guardar" class="bi bi-floppy"> Guardar</button>
		</div>
	</div>

</EditForm>



@code {
	[Parameter]
	public int TecnicoId { get; set; }
	Tecnicos Tecnico = new Tecnicos();

	protected override async Task OnInitializedAsync()
	{
		Tecnico = await TS.Buscar(TecnicoId);
	}

	public async Task Guardar()
	{

		await TS.Guardar(Tecnico);
		navigation.NavigateTo("/index");

	}
	public void Volver()
	{
		navigation.NavigateTo("/index");
	}

}
