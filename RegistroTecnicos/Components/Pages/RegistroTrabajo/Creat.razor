@page "/RegistroTrabajos/Creat"
@rendermode InteractiveServer
@inject TrabajoServices WS
@inject TecnicosServices tecnicoServices
@inject ClienteServices CS
@inject PrioridadesServices PrioridaServices
@inject NavigationManager navigation

<PageTitle>Crear Trabajo</PageTitle>
<h2>Crear nuevos trabajos</h2>

<EditForm Model="@Trabajo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
  
    <div class="Contenedor_Agregar">
        <div class="Contenedor_Secundario">
            <h3>Nuevo trabajo</h3>

            <div class="inputs-agregar">
                <label>Cual es el cliente:</label>
                <InputSelect @bind-Value="Trabajo.ClienteId">
                    <option ="0" selected disabled>Elija una opci&oacute;n</option>
                    @foreach (var Cliente in Clientes)
                    {
                        <option value="@Cliente.ClienteId">@Cliente.Nombres</option>
                    }
                </InputSelect>
            </div>

            <div class="inputs-agregar"> 
                <label>Eliga el T&eacute;cnico para el trabajo:</label>
                <InputSelect class = "select"@bind-Value="Trabajo.TecnicoId">
                    <option ="0" selected disabled>Elija una opci&oacute;n</option>
                    @foreach (var Tecnico in Tecnicos)
                    {
                        <option value="@Tecnico.TecnicoId">@Tecnico.Nombres (@Tecnico.TipoTecnico?.Descripcion)</option>
                    }
                </InputSelect>
            </div>

            <div class="inputs-agregar">
                <label>Cual es la prioridad:</label>
                <InputSelect @bind-Value="Trabajo.PrioridadId">
                    <option ="0" selected disabled>Elija una opci&oacute;n</option>
                    @foreach (var Prioridad in Prioridades)
                    {
                        <option value="@Prioridad.PrioridadId">@Prioridad.Descripcion</option>
                    }
                </InputSelect>
            </div>

            <div class="inputs-agregar">
                <label>Fecha del trabajo:</label>
                <InputDate @bind-Value="Trabajo.Fecha">@Trabajo.Fecha</InputDate>
            </div>

            <div class="inputs-agregar">
                <label>Descripcion:</label>
                <InputText @bind-Value="Trabajo.Descripcion" />
                <ValidationMessage For="@(() => Trabajo.Descripcion)" />
            </div>

            <div class="inputs-agregar">
                <label>Precio del Trabajo:</label>
                <InputNumber @bind-Value="Trabajo.Monto" />
                <ValidationMessage For="@(() => Trabajo.Monto)" />
            </div>

            <div class="Botones_agregar">
                <button type="button" @onclick="Volver" class="btn btn-info bi bi-arrow-left-square "> Volver</button>
                <button type="submit" class="btn btn-success bi bi-floppy"> Guardar</button>
            </div>
        </div>

    </div>

</EditForm>

@code {
    public Trabajos Trabajo { get; set; } = new Trabajos();
    public List<Tecnicos> Tecnicos = new List<Tecnicos>();
    public List<Clientes> Clientes = new List<Clientes>();
    public List<Prioridades> Prioridades = new List<Prioridades>();

    protected override async Task OnInitializedAsync()
    {
        Tecnicos = await tecnicoServices.Listar(t => true);
        Clientes = await CS.Listar(c => true);
        Prioridades = await PrioridaServices.Listar(p => true);
    }
    public async Task Guardar()
    {
        await WS.Guardar(Trabajo);
        navigation.NavigateTo("/RegistroTrabajos/index");
    }
    public void Volver()
    {
        navigation.NavigateTo("/RegistroTrabajos/index");
    }
}