@page "/TiposTecnicos/RegistroTipos/Modificar/{TipoDeTecnicoId:int}"
@rendermode InteractiveServer
@inject TiposTecnicosServices TTS
@inject NavigationManager navigation
<link rel="stylesheet" href="modificar.css" />

<PageTitle>Modificar t&eacute;cnicos</PageTitle>

<h3>Modificar t&eacute;cnicos</h3>
<EditForm Model="@TipoTecnico" OnValidSubmit="Guardar">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="Contenedor-Modificar">
		<h2>Modificar</h2>

		<div>
			<label>Tipo de t&eacute;cnico Id: @TipoTecnico.TipoDeTecnicosId</label>
		</div>

		<div class="Inputs-text">
			<label>Descripci&oacute;n:</label>
			<InputText @bind-Value="@TipoTecnico.Descripcion" />
			<ValidationMessage For="@(() => TipoTecnico.Descripcion)" />
		</div>

		<div class="botones">
			<button type="submit" @onclick="Volver" class="bi bi-arrow-left-square"> Volver</button>
			<button type="submit" @onclick="Guardar" class="bi bi-floppy"> Guardar</button>
		</div>
	</div>
</EditForm>



@code {
	[Parameter]
	public int TipoDeTecnicoId { get; set; }
	TiposTecnicos TipoTecnico = new TiposTecnicos();

	protected override async Task OnInitializedAsync()
	{
		TipoTecnico = await TTS.Buscar(TipoDeTecnicoId);
	}

	public async Task Guardar()
	{

		await TTS.Guardar(TipoTecnico);
		navigation.NavigateTo("/TiposTecnicos/RegistroTipos");

	}
	public void Volver()
	{
		navigation.NavigateTo("/TiposTecnicos/RegistroTipos");
	}

}
