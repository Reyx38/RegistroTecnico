@page "/RegistroClientes/edit/{ClienteId:int}"
@rendermode InteractiveServer
@inject ClienteServices clienteService
@inject NavigationManager navigation
<link rel="stylesheet" href="modificar.css" />

<PageTitle>Modificar clientes</PageTitle>

<h3>Modificar clientes</h3>
<EditForm Model="@Cliente" OnValidSubmit="Guardar">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="Contenedor-Modificar">
		<h2>Modificar</h2>

		<div>
			<label>Cliente Id: @Cliente.ClienteId</label>
		</div>

		<div class="Inputs-text">
			<label>Nombres:</label>
			<InputText @bind-Value="@Cliente.Nombres" />
			<ValidationMessage For="@(() => Cliente.Nombres)" />
		</div>

		<div class="inputs-text">
			<label>Numero de telefono:</label>
			<InputText @bind-Value="Cliente.Telefono" />
			<ValidationMessage For="@(() => Cliente.Telefono)" />
		</div>

		<div class="botones">
			<button type="submit" @onclick="Volver" class="bi bi-arrow-left-square"> Volver</button>
			<button type="submit" @onclick="Guardar" class="bi bi-floppy"> Guardar</button>
		</div>
	</div>
</EditForm>



@code {
	[Parameter]
	public int ClienteId { get; set; }
	Clientes Cliente = new Clientes();

	protected override async Task OnInitializedAsync()
	{
		Cliente = await clienteService.Buscar(ClienteId);
	}

	public async Task Guardar()
	{

		await clienteService.Guardar(Cliente);
		navigation.NavigateTo("/RegistroClientes/index");

	}
	public void Volver()
	{
		navigation.NavigateTo("/RegistroClientes/index");
	}

}

